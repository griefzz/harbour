name: CI
on:
  push:
    branches: [main]
permissions:
  contents: read
jobs:
#  Disable AppleClang testing until we have a setup for it
#  build-appleclang:
#    runs-on: macos-latest
#    strategy:
#      fail-fast: false
#      matrix:
#        build_type: ["Release"]
#    env:
#      CC: clang
#      CXX: clang++
#      # Unlike GCC and upstream Clang, AppleClang still defaults to `-std=c++98`
#      # for some reason. Also, the macOS image on GitHub Actions provides wildly
#      # numbered Xcode versions. Thus, rather than varying the compiler version,
#      # we set the `-std` flag explicitly in order to vary the language version.
#      # (The other two flags are the default provided for CXXFLAGS in Makefile.)
#      CXXFLAGS: -O3 -g -std=c++20
#    steps:
#      - uses: actions/checkout@v4.1.7
#      - name: Configure CMake
#        run: cmake -B build -S ${{ github.workspace }}
#      - name: Build
#        run: cmake --build build --config ${{ matrix.build_type }}
#      - name: Test
#        working-directory: ${{ github.workspace }}/build
#        run: ctest --build-config ${{ matrix.build_type }}

  build-clang:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ver: [18]
        build_type: ["Debug", "Release"]
    env:
      CC: clang-${{ matrix.ver }}
      CXX: clang++-${{ matrix.ver }}
    steps:
      - uses: actions/checkout@v4.1.7
      - name: Install Clang ${{ matrix.ver }}
        run: |
          # Avoid `Conflicts: python3-lldb-x.y` between packages.
          sudo apt purge -y python3-lldb-14
          wget https://apt.llvm.org/llvm.sh
          chmod +x ./llvm.sh
          sudo ./llvm.sh ${{ matrix.ver }}
        shell: bash
      - name: Configure CMake
        run: cmake -B build -S ${{ github.workspace }}
      - name: Build
        run: cmake --build build --config ${{ matrix.build_type }}
      - name: Test
        working-directory: ${{ github.workspace }}/build
        run: ctest --build-config ${{ matrix.build_type }} --output-on-failure

  build-gcc:
    # TODO(junyer): Switch back to `ubuntu-latest` when this becomes that.
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        ver: [13, 14]
        build_type: ["Debug", "Release"]
    env:
      CC: gcc-${{ matrix.ver }}
      CXX: g++-${{ matrix.ver }}
    steps:
      - uses: actions/checkout@v4.1.7
      - name: Configure CMake
        run: cmake -B build -S ${{ github.workspace }}
      - name: Build
        run: cmake --build build --config ${{ matrix.build_type }}
      - name: Test
        working-directory: ${{ github.workspace }}/build
        run: ctest --build-config ${{ matrix.build_type }} --output-on-failure

  build-cl:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        build_type: ["Debug", "Release"]
    env:
      CC: cl
      CXX: cl
    steps:
      - uses: actions/checkout@v4.1.7
      - name: Configure CMake
        run: cmake -B build -S ${{ github.workspace }}
      - name: Build
        run: cmake --build build --config ${{ matrix.build_type }}
      - name: Test
        working-directory: ${{ github.workspace }}/build
        run: ctest --build-config ${{ matrix.build_type }} --output-on-failure